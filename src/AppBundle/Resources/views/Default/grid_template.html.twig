{# ------------------------------------------------------ grid ------------------------------------------------------ #}
    {% block grid %}
        <div class="grid" xmlns="http://www.w3.org/1999/html">
            {% if grid.totalCount > 0 or grid.isFiltered or grid.noDataMessage is sameas(false) %}
                <form id="{{ grid.hash }}" action="{{ grid.routeUrl }}" method="post">
                    <div class="grid_header">
                        {% if grid.massActions|length > 0 %}
                            {{ grid_actions(grid) }}
                        {% endif %}
                    </div>
                    <div class="table-responsive">
                        <table class="table table-striped jambo_table">
                            {% if grid.isTitleSectionVisible %}
                                <thead>
                                {{ grid_titles(grid) }}
                                </thead>
                            {% endif %}
                            {% if grid.isFilterSectionVisible %}
                                {{ grid_filters(grid) }}
                            {% endif %}
                            {% if grid.exports|length > 0 %}
                                {{ grid_exports(grid) }}
                            {% endif %}
                            {{ grid_rows(grid) }}
                        </table>
                    </div>
                    <div class="grid_footer">
                        {% if grid.isPagerSectionVisible %}
                            {{ grid_pager(grid) }}
                        {% endif %}
                        {#{% if grid.exports|length > 0 %}#}
                        {#{{ grid_exports(grid) }}#}
                        {#{% endif %}#}
                        {% if grid.tweaks|length > 0 %}
                            {{ grid_tweaks(grid) }}
                        {% endif %}
                    </div>
                    {% if withjs %}
                        {{ grid_scripts(grid) }}
                    {% endif %}
                </form>
            {% else %}
                {{ grid_no_data(grid) }}
            {% endif %}
        </div>
    {% endblock grid %}
        {# --------------------------------------------------- grid_no_data ------------------------------------------------- #}
    {% block grid_no_data %}
        <div id="callout-badges-ie8-empty" class="bs-callout bs-callout-danger col-md-12">
            <h4>{{ "no_result_found"|trans }}</h4>
        </div>

        {#<p class="no_data">{{ grid.noDataMessage|default('No data')|trans|raw }}</p>#}
    {% endblock grid_no_data %}
        {# --------------------------------------------------- grid_no_result ----------------------------------------------- #}
    {% block grid_no_result %}
        {% spaceless %}
            {% set nbColumns = 0 %}
            {% for column in grid.columns %}
                {% if column.visible(grid.isReadyForExport) %}
                    {% set nbColumns = nbColumns + 1 %}
                {% endif %}
            {% endfor %}
            <tr class="grid-row-cells">
                <td class="last-column last-row" colspan="{{ nbColumns }}" style="text-align: center;">
                    {#{{ grid.noResultMessage|default('No result')|trans|raw }}#}
                    <div id="callout-badges-ie8-empty" class="bs-callout bs-callout-danger col-md-12">
                        <h4>{{ "no_result_found"|trans }}</h4>
                        {#<p>Try again.</p>#}
                    </div>
                </td>
            </tr>
        {% endspaceless %}
    {% endblock grid_no_result %}
        {# --------------------------------------------------- grid_titles -------------------------------------------------- #}
    {% block grid_titles %}
        <tr class="grid-row-titles headings">
            {% for column in grid.columns %}
                {% if column.visible(grid.isReadyForExport) %}
                    {% set style = "" %}
                    {% if(column.size > -1) %}
                        {% set style = "width: " ~ column.size ~ "px;" %}
                    {% endif %}
                    {% if column.align != 'left'%}
                        {% set style = "text-align: " ~ column.align ~ ";" %}
                    {% endif %}
                    <th class="{% if column.align != 'left'%}align-{{ column.align }}{% endif %}{% if column.class %} {{ column.class }}{% endif %}{% if loop.last %} last-column{% endif %}" style="{{ style }}">
                        {%- spaceless %}
                            {% if column.type == 'massaction' %}
                                <input type="checkbox" class="grid-mass-selector" onclick="{{ grid.hash }}_markVisible(this.checked);"/>
                            {% else %}
                                {% if column.usePrefixTitle == true %}
                                    {% set columnTitle = grid.prefixTitle ~ column.title ~ '__abbr' %}
                                    {% if columnTitle|trans == columnTitle %}
                                        {% set columnTitle = grid.prefixTitle ~ column.title %}
                                    {% endif %}
                                {% else %}
                                    {% set columnTitle = column.title %}
                                {% endif %}
                                {% if (column.sortable) %}
                                    <a class="order" href="{{ grid_url('order', grid, column) }}" title="{{ 'Order by'|trans }} {{ columnTitle|trans }}">{{ columnTitle|trans|capitalize }}
                                        {% if column.order == 'asc' %}
                                            <i aria-hidden="true" class="glyphicon glyphicon-triangle-top" style="color:#ce4844"></i>
                                        {% elseif column.order == 'desc' %}
                                            <i aria-hidden="true" class="glyphicon glyphicon-triangle-bottom" style="color:#ce4844"></i>
                                        {% else %}
                                            <i aria-hidden="true" class="glyphicon glyphicon-minus"></i>
                                        {% endif %}
                                    </a>
                                {% else %}
                                    {{ columnTitle|trans|capitalize }}
                                {% endif %}
                            {% endif %}
                        {% endspaceless -%}
                    </th>
                {% endif %}
            {% endfor %}
        </tr>
    {% endblock grid_titles %}
        {# --------------------------------------------------- grid_filters -------------------------------------------------- #}
    {% block grid_filters %}
        <tr class="grid-row-filters">
            {% for column in grid.columns %}
                {% if column.visible(grid.isReadyForExport) %}
                    <th class="{% if column.class %}{{ column.class }}{% endif %}{% if loop.last %} last-column{% endif %}"{% if(column.size > -1) %} style="width:{{ column.size }}px;"{% endif %}>
                        {% if column.filterable %}{{ grid_filter(column, grid)|raw }}{% endif %}
                    </th>
                {% endif %}
            {% endfor %}
        </tr>
    {% endblock grid_filters %}
        {# ---------------------------------------------------- grid_search -------------------------------------------------- #}
    {% block grid_search %}
        {% if grid.isFilterSectionVisible %}
            <div class="grid-search">
                <form id="{{ grid.hash }}_search" action="{{ grid.routeUrl }}" method="post">
                    {% for column in grid.columns %}
                        {% if column.isFilterable and column.type not in ['actions', 'massaction'] %}
                            {% if column.usePrefixTitle == true %}
                                {% set columnTitle = grid.prefixTitle ~ column.title %}
                            {% else %}
                                {% set columnTitle = column.title %}
                            {% endif %}
                            <div class="{{ cycle(['odd', 'even'], loop.index) }}">
                                <label>{{ columnTitle|trans }}</label>
                                {{ grid_filter(column, grid, false)|raw }}</div>
                        {% endif %}
                    {% endfor %}
                    <div class="grid-search-action">
                        {#<th colspan="{{ grid.columns|length }}" class="text-center" >#}
                        <button id="search-customers-button" type="button" class="btn btn-info text-center" onClick="return {{ grid.hash }}_submitForm(event, this.form, true);">
                            <span class="glyphicon glyphicon-search"></span> {{ 'search'|trans|capitalize }}
                        </button>
                        {#</th>#}
                        <input type="submit" class="grid-search-submit" value="{{ 'search'|trans|capitalize }}"/>
                        <input type="button" class="grid-search-reset" value="{{ 'Reset'|trans }}" onclick="return {{ grid.hash }}_reset();"/>
                    </div>
                </form>
            </div>
        {% endif %}
    {% endblock grid_search %}
        {# ---------------------------------------------------- grid_rows --------------------------------------------------- #}
    {% block grid_rows %}
        {% for row in grid.rows %}
            {#{{ dump(row) }}#}
            {% set last_row = loop.last %}
            {% spaceless %}
                {% set gridColumns %}
                    {% for column in grid.columns %}
                        {% if column.visible(grid.isReadyForExport) %}
                            <td class="grid-column-{{ column.renderBlockId }}{% if column.class %} {{ column.class }}{% endif %}{% if column.align != 'left'%} align-{{ column.align }}{% endif %}{% if loop.last %} last-column{% endif %}{% if last_row %} last-row{% endif %}">{{ grid_cell(column, row, grid)|raw }}</td>
                        {% endif %}
                    {% endfor %}
                {% endset %}
                <tr{% if row.color != '' %} style="background-color:{{ row.color }};"{% endif %} class="grid-row-cells {{ cycle(['odd', 'even'], loop.index) }}{% if row.class != '' %} {{ row.class }}{% endif %}">
                {{ gridColumns }}
            {% endspaceless %}
            </tr>
        {% else %}
            {{ grid_no_result(grid) }}
        {% endfor %}
    {% endblock grid_rows %}

        {# ---------------------------------------------------- grid_pager -------------------------------------------------- #}
    {% block grid_pager %}
        {% if pagerfanta %}
            {{ grid_pagerfanta(grid) }}
        {% else %}
            <div class="pager">
                {{ grid_pager_totalcount(grid) }}
                {{ grid_pager_selectpage(grid) }}
                {{ grid_disposition_selectpagenbr_itemsnbr(grid) }}
            </div>
        {% endif %}
    {% endblock grid_pager %}
        {# ---------------------------------------------------- grid_pager_totalcount -------------------------------------------------- #}
    {% block grid_pager_totalcount %}
        <div class="col-md-4 col-sm-12" style="text-align:left" role="alert" >
            <div class="alert alert-info" style="display: inline-block;">{{ '%count%' | transchoice(grid.totalCount, {'%count%': grid.totalCount}) }} {{ "results"|trans }}</div>
        </div>
    {% endblock grid_pager_totalcount %}
        {# ---------------------------------------------------- grid_pager_selectpage -------------------------------------------------- #}
    {% block grid_pager_selectpage %}
        {% spaceless %}
            <div class="col-md-4 col-sm-12">
                <nav>
                    <ul class="pagination grid-pagination">
                        <li>
                            <span aria-label="Previous" {% if grid.page <= 0 %}class="disabled" {% else %}onclick="return {{ grid.hash }}_previousPage();"{% endif %} >
                                <span class="glyphicon glyphicon-fast-backward" aria-hidden="true"></span>
                            </span>
                        </li>
                        {# On affiche 1er ... 7 pages ... dernier #}
                        {% set limit = 10 %}
                        {% if grid.pageCount < 9 %}
                            {% for i in 1..grid.pageCount %}
                                <li {% if i == grid.page +1 %}class="active"{% endif %}><span data-index="{{ i }}" onclick="return {{ grid.hash }}_clickPage(event, parseInt(this.dataset.index)-1);">{{ i }}</span></li>
                            {% endfor %}
                        {% else %}
                            {# Page 1 #}
                            <li {% if 1 == grid.page +1 %}class="active"{% endif %}><span data-index="1" onclick="return {{ grid.hash }}_clickPage(event, parseInt(this.dataset.index)-1);">1</span></li>
                            {% if grid.page+1 > (1 + 3) %}
                                <li><span>....</span></li>
                            {% endif %}

                            {% for i in grid.page-2..grid.page+4 %}
                                {% if(i!=1 and i > 0 and i < grid.pageCount) %}
                                    <li {% if i == grid.page +1 %}class="active"{% endif %}><span data-index="{{ i }}" onclick="return {{ grid.hash }}_clickPage(event, parseInt(this.dataset.index)-1);">{{ i }}</span></li>
                                {% endif %}
                            {% endfor %}

                            {% if grid.page+1 < (grid.pageCount - 3) %}
                                <li><span>...</span></li>
                            {% endif %}
                            <li {% if grid.pageCount == grid.page +1 %}class="active"{% endif %}><span data-index="{{ grid.pageCount }}" onclick="return {{ grid.hash }}_clickPage(event, parseInt(this.dataset.index)-1);">{{ grid.pageCount }}</span></li>
                        {% endif %}
                        <li>
            <span aria-label="Next" {% if grid.page >= grid.pageCount-1 %}class="disabled" {% else %} onclick="return {{ grid.hash }}_nextPage();"{% endif %} >
        <span class="glyphicon glyphicon-fast-forward" aria-hidden="true"></span>
            </span>
                        </li>
                    </ul>
                </nav>
            </div>
        {% endspaceless %}
    {% endblock grid_pager_selectpage %}
        {# ---------------------------------------------------- grid_disposition_selectpagenbr_itemsnbr --------------------------------- #}
    {% block grid_disposition_selectpagenbr_itemsnbr %}
        <div class="col-md-4 col-sm-12">
            {#<div class="" role="group" style="display: inline-block">#}
            <div class="col-md-6 col-sm-12" style="margin:0px">
                <span class="left-label">
                    <span class=""> {{ 'go_to_page'|trans|ucfirst }}</span>
                </span>
                <div class="input-group">
                    <input type="number" placeholder="Aller à la page..." class="current form-control" value="{{ grid.page + 1 }}" size="2" style="text-align: center;" onkeypress="return {{ grid.hash }}_enterPage(event, parseInt(this.value)-1);"/>
                    <span class="input-group-btn">
                    <button type="button" class="btn btn-default">
                        <span class="glyphicon glyphicon-search"></span>
                    </button>
                    </span>
                </div>
            </div>
            <div class="col-md-6 col-sm-12" > {# style="margin-bottom:5px" #}
                <span class="item-pagination">
                        <span class="left-label">
                            <span class="">{{ "result_per_page"|trans|ucfirst }}</span>
                        </span>
                    </span>
                <select onchange="return {{ grid.hash }}_resultsPerPage(this.value);">
                    {% for key, value in grid.limits %}
                        <option value="{{ key }}"{% if (key == grid.limit) %} selected="selected"{% endif %}>{{ value }}</option>
                    {% endfor %}
                </select>
            </div>
            {#</div>#}
        </div>
    {% endblock %}

        {# ---------------------------------------------------- grid_actions ------------------------------------------------- #}
    {% block grid_actions %}
        <div class="mass-actions">
    <span class="grid_massactions_helper">
        <a href="#" onclick="return {{ grid.hash }}_markVisible(true);">{{ 'Select visible'|trans }}</a> |
        <a href="#" onclick="return {{ grid.hash }}_markVisible(false);">{{ 'Deselect visible'|trans }}</a> |
        <a href="#" onclick="return {{ grid.hash }}_markAll(true);">{{ 'Select all'|trans }}</a> |
        <a href="#" onclick="return {{ grid.hash }}_markAll(false);">{{ 'Deselect all'|trans }}</a>
        <span class="mass-actions-selected" id="{{ grid.hash }}_mass_action_selected"></span>
    </span>
            {% spaceless %}
                <div style="float:right;" class="grid_massactions">
                    {{ 'Action'|trans }}
                    <input type="hidden" id="{{ grid.hash }}_mass_action_all" name="{{ grid.hash }}[{{ constant('APY\\DataGridBundle\\Grid\\Grid::REQUEST_QUERY_MASS_ACTION_ALL_KEYS_SELECTED') }}]" value="0"/>
                    <select name="{{ grid.hash }}[{{ constant('APY\\DataGridBundle\\Grid\\Grid::REQUEST_QUERY_MASS_ACTION') }}]">
                        <option value="-1"></option>
                        {% for key, massAction in grid.massActions %}
                            <option value="{{ key }}">{{ massAction.title|trans }}</option>
                        {% endfor %}
                    </select>
                    <input type="submit"  value="{{ 'Submit Action'|trans }}"/>
                </div>
            {% endspaceless %}
        </div>
    {% endblock grid_actions %}
        {# --------------------------------------------------- grid_exports ------------------------------------------------- #}
    {% block grid_exports %}
        <div class="exports col-md-offset-9 col-md-3 col-sm-offset-6 col-sm-6 col-xs-12" style="margin-bottom: 1%">
            {% spaceless %}
                <div class="cold-md-6 col-sm-6 col-xs-12">
                    <select name="{{grid.hash}}[{{ constant('APY\\DataGridBundle\\Grid\\Grid::REQUEST_QUERY_EXPORT') }}]" style="margin:1px">
                        {#<option value="-1">Export type</option>#}
                        {#<optgroup label="Calc">#}
                        {% for key, export in grid.exports %}
                            <option value="{{key}}">{{ export.title|trans }}</option>
                        {% endfor %}
                        {#</optgroup>#}
                    </select>
                </div>
                <div class="cold-md-6 col-sm-6 col-xs-12">
                    <button type="submit" class="btn btn-sm btn-warning text-center" style="margin:1px">
                        <span class="glyphicon glyphicon-export"></span> {{ "export_verb"|trans|capitalize }}</button>
                    {#<input type="submit" value="{{ 'Export'|trans }}"/>#}
                </div>
            {% endspaceless %}
        </div>
    {% endblock grid_exports %}
        {# --------------------------------------------------- grid_tweaks ------------------------------------------------- #}
    {% block grid_tweaks %}
        <div class="tweaks" style="float:right">
            {% spaceless %}
                {{ 'Tweaks'|trans }}
                <select name="{{grid.hash}}[{{ constant('APY\\DataGridBundle\\Grid\\Grid::REQUEST_QUERY_TWEAK') }}]">
                    <option value=""></option>
                    {% for key, tweak in grid.tweaks %}
                        <option value="{{key}}">{{ tweak.title|trans }}</option>
                    {% endfor %}
                </select>
                <input type="submit" value="{{ 'Tweak'|trans }}"/>
            {% endspaceless %}
        </div>
    {% endblock grid_tweaks %}
        {# ------------------------------------------------ grid_column_actions_cell --------------------------------------------- #}
    {% block grid_column_actions_cell %}
        {% set actions = column.getActionsToRender(row) %}
        {#<ul class="grid-row-actions">#}
        {% for action in actions %}
            {#<li>#}

            {% if action.isButton == false %}
                <a href="{{ url(action.route, column.routeParameters(row, action), false) }}" target="{{ action.target }}"{% if action.confirm %} onclick="return confirm('{{ action.confirmMessage }}')"{% endif %}{% for name, value in action.attributes %} {{ name }}="{{ value }}" {% endfor %}>
            {% else %}
                <button type="button" data-url="{{ url(action.route, column.routeParameters(row, action), false) }}" {% for dataName, dataValue in column.routeParameters(row, action) %} data-{{ dataName }}="{{ dataValue }}" {% endfor %} {% if action.confirm %} onclick="return confirm('{{ action.confirmMessage }}')"{% endif %} {% for name, value in action.attributes %} {{ name }}="{{ value }}" {% endfor %}>
            {% endif %}

            {% if action.prevIcon %}<i class="fa {{ action.prevIcon }}" aria-hidden="true"></i>{% endif %}

            {{ action.title|trans|capitalize }}

             {% if action.isButton == false %}
            </a>
            {% else %}
            </button>
            {% endif %}
            {#</li>#}
        {% endfor %}
        {#</ul>#}
    {% endblock grid_column_actions_cell %}
        {# ------------------------------------------------ grid_column_massaction_cell --------------------------------------------- #}
    {% block grid_column_massaction_cell %}
        <input type="checkbox" class="action" value="1" name="{{ grid.hash }}[{{ column.id }}][{{ row.primaryFieldValue }}]"/>
    {% endblock grid_column_massaction_cell %}
        {# ------------------------------------------------ grid_column_type_boolean_cell --------------------------------------------- #}
    {% block grid_column_boolean_cell %}
        <span class="grid_boolean_{{ value }}" title="{{ value }}">{{ block('grid_column_cell') }}</span>
    {% endblock grid_column_boolean_cell %}
    {% block grid_column_type_boolean_cell %}
        {{ block('grid_column_boolean_cell') }}
    {% endblock grid_column_type_boolean_cell %}
        {# ------------------------------------------------ grid_column_type_rank_cell --------------------------------------------- #}
    {% block grid_column_rank_cell %}
        {{ grid.page * grid.limit + value }}
    {% endblock grid_column_rank_cell %}
    {% block grid_column_type_rank_cell %}
        {{ block('grid_column_rank_cell') }}
    {% endblock grid_column_type_rank_cell %}
        {# ------------------------------------------------ grid_column_type_array_columns --------------------------------------------- #}
    {% block grid_column_array_cell %}
        {% set sourceValues = row.field(column.id) %}
        {% set values = value %}
        {% for key, index in values -%}
            {% set value = index %}
            {% set sourceValue = sourceValues[key] %}
            {{ block('grid_column_cell') | raw }}{{ column.separator | raw }}
        {%- endfor %}
    {% endblock grid_column_array_cell %}
    {% block grid_column_type_array_cell %}
        {{ block('grid_column_array_cell') }}
    {% endblock grid_column_type_array_cell %}
        {# ------------------------------------------------ grid_column_type_join_cell --------------------------------------------- #}
    {% block grid_column_join_cell %}
        {#{{ dump(column.joinColumns) }}#}
        {% for key, index in column.joinColumns -%}
            {% set value = row.field(index) %}
            {% set sourceValue = value %}
            {{ block('grid_column_cell') | raw }}{{ column.separator | raw }}
        {%- endfor %}
    {% endblock grid_column_join_cell %}
    {% block grid_column_type_join_cell %}
        {{ block('grid_column_join_cell') }}
    {% endblock grid_column_type_join_cell %}
         {# ------------------------------------------------ grid_column_type_country_cell --------------------------------------------- #}
    {% block grid_column_country_cell %}
        {% set value = value|country %}
        {{ block("grid_column_cell") }}
    {% endblock %}
    {% block grid_column_type_country_cell %}
        {{ block('grid_column_country_cell') }}
    {% endblock %}

        {# ------------------------------------------------ grid_column_type_civility_cell --------------------------------------------- #}
    {% block grid_column_civility_cell %}
        {% set allFullNames = value|split(', ') %}
        {% set allFullNamesTrans = [] %}

        {% for key, fullName in allFullNames %}
            {% set splittedValue = fullName|split(' ', 2) %}
            {% set civility = attribute(splittedValue, 0)|trans %}
            {% set full_name = attribute(splittedValue, 1) %}
            {% set concatenated_full_name = civility ~ ' ' ~ full_name %}

            {% set allFullNamesTrans = allFullNamesTrans|merge([concatenated_full_name]) %}
        {% endfor %}
        {% set value = allFullNamesTrans|join(', ') %}
        {{ block("grid_column_cell") }}
    {% endblock %}
    {% block grid_column_type_civility_cell %}
        {{ block('grid_column_country_cell') }}
    {% endblock %}

  {# ------------------------------------------------ grid_column_type_color_tag_cell --------------------------------------------- #}
    {% block grid_column_color_tag_cell %}
        <span class="small-round-bullet" style="color: transparent; background-color: {{ value }}">
           {#{{ block("grid_column_cell") }}#}
        </span>
    {% endblock %}
    {% block grid_column_type_color_tag_cell %}
        {{ block('grid_column_color_tag_cell') }}
    {% endblock %}
        {# ------------------------------------------- grid_column_cell ---------------------------------------- #}
    {% block grid_column_cell %}
        {%- spaceless %}
            {% if column.filterable and column.searchOnClick %}
                {% set sourceValue = sourceValue is defined ? sourceValue : row.field(column.id) %}
                <a href="?{{ grid.hash }}[{{ column.id }}][from]={{ sourceValue | url_encode() }}" class="searchOnClick">{{ value }}</a>
            {% elseif column.safe is sameas(false) %}
                {{ value|raw }}
            {% else %}
                {{ value|escape(column.safe)|trans({'%value': value})|raw }}
            {% endif %}
        {% endspaceless -%}
    {% endblock grid_column_cell %}
        {# -------------------------------------------- grid_column_operator --------------------------------------- #}
    {% block grid_column_operator %}
        {% if column.operatorsVisible %}
            <div class="grid-filter-operator">
                <select name="{{ grid.hash }}[{{ column.id }}][operator]" onchange="{{ grid.hash }}_switchOperator(this, '{{ grid.hash }}__{{ column.id }}__query__'{% if submitOnChange is sameas(false) %}, false{% endif%});">
                    {% for operator in column.operators %}
                        <option value="{{ operator }}"{% if op == operator %} selected="selected"{% endif %}>{{ operator |trans }}</option>
                    {% endfor %}
                </select>
            </div>
        {% endif %}
    {% endblock grid_column_operator %}


        {# -------------------------------------------- grid_column_filter_type_input --------------------------------------- #}
    {% block grid_column_filter_type_input %}
        {% set btwOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTW') %}
        {% set btweOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTWE') %}
        {% set isNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNULL') %}
        {% set isNotNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNOTNULL') %}
        {% set op = column.data.operator is defined ? column.data.operator : column.defaultOperator %}
        {% set from = column.data.from is defined ? column.data.from : null %}
        {% set to = column.data.to is defined ? column.data.to : null %}
        <div class="grid-filter-input">
            {{ grid_column_operator(column, grid, op, submitOnChange) }}
            <div class="grid-filter-input-query" align="center" style="margin-top: 5px;">
                <input type="{{ column.inputType }}" value="{{ from }}" class="grid-filter-input-query-from form-control" name="{{ grid.hash }}[{{ column.id }}][from]" id="{{ grid.hash }}__{{ column.id }}__query__from" {% if submitOnChange is sameas(true) %}onkeypress="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%} {{ ( op == isNullOperator or op == isNotNullOperator ) ? 'style="display: none;" disabled="disabled"' : '' }} />
                <input type="{{ column.inputType }}" value="{{ to }}" class="grid-filter-input-query-to form-control" name="{{ grid.hash }}[{{ column.id }}][to]" id="{{ grid.hash }}__{{ column.id }}__query__to" {% if submitOnChange is sameas(true) %}onkeypress="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%} {{ ( op == btwOperator or op == btweOperator ) ? '': 'style="display: none;" disabled="disabled"' }} />
            </div>
        </div>
    {% endblock grid_column_filter_type_input %}
        {# -------------------------------------------- grid_column_filter_type_select --------------------------------------- #}
    {% block grid_column_filter_type_select %}
        {% set btwOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTW') %}
        {% set btweOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTWE') %}
        {% set isNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNULL') %}
        {% set isNotNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNOTNULL') %}
        {% set op = column.data.operator is defined ? column.data.operator : column.defaultOperator %}
        {% set from = column.data.from is defined ? column.data.from : null %}
        {% set to = column.data.to is defined ? column.data.to : null %}
        {% set multiple = column.selectMulti %}
        {% set expanded = column.selectExpanded %}
        <div class="grid-filter-select">
            {{ grid_column_operator(column, grid, op, submitOnChange) }}
            <div class="grid-filter-select-query" style="margin-top: 5px;">
                {% if expanded %}
                    <span class="grid-filter-select-query-from" id="{{ grid.hash }}__{{ column.id }}__query__from" {{ ( op == isNullOperator or op == isNotNullOperator ) ? 'style="display: none;" disabled="disabled"' : '' }}>
                    {% for key, value in column.values %}
                        <span>
                            <input type="{% if multiple %}checkbox{% else %}radio{% endif %}" name="{{ grid.hash }}[{{ column.id }}][from][]" value="{{ key }}" {% if key in from %} checked="checked"{% endif %} {% if submitOnChange is sameas(true) %}onclick="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%}/>
                            <label>{{ value|trans }}</label>
                        </span>
                    {% endfor %}
                    </span>
                    <span class="grid-filter-select-query-to" id="{{ grid.hash }}__{{ column.id }}__query__to" {{ ( op == btwOperator or op == btweOperator ) ? '': 'style="display: none;" disabled="disabled"' }}>
                    {% for key, value in column.values %}
                        <span>
                            <input type="{% if multiple %}checkbox{% else %}radio{% endif %}" name="{{ grid.hash }}[{{ column.id }}][to]" value="{{ key }}" {% if not to is null and to == key %} checked="checked"{% endif %} {% if submitOnChange is sameas(true) %}onclick="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%}/>
                            <label>{{ value|trans }}</label>
                        </span>
                    {% endfor %}
                    </span>
                    {#{% if multiple %}<input type="submit" value="{{ 'Go'|trans }}" />{% endif %}#}
                {% else %}
                    <select{% if multiple %} multiple="multiple"{% endif %} name="{{ grid.hash }}[{{ column.id }}][from][]" class="grid-filter-select-query-from" data-width="100%" id="{{ grid.hash }}__{{ column.id }}__query__from" {% if submitOnChange is sameas(true) %}onchange="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%} {{ ( op == isNullOperator or op == isNotNullOperator ) ? 'style="display: none;" disabled="disabled"' : '' }}>
                        <option value="">&nbsp;</option>
                        {% for key, value in column.values %}
                            <option value="{{ key }}"{% if key in from %} selected="selected"{% endif %}>{{ value|trans }}</option>
                        {% endfor %}
                    </select>
                    <select name="{{ grid.hash }}[{{ column.id }}][to]" class="grid-filter-select-query-to" id="{{ grid.hash }}__{{ column.id }}__query__to" {% if submitOnChange is sameas(true) %}onchange="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%} {{ ( op == btwOperator or op == btweOperator ) ? '': 'style="display: none;" disabled="disabled"' }}>
                        <option value="">&nbsp;</option>
                        {% for key, value in column.values %}
                            <option value="{{ key }}"{% if not to is null and to == key %} selected="selected"{% endif %}>{{ value|trans }}</option>
                        {% endfor %}
                    </select>
                    {#{% if multiple %}<input type="submit" value="{{ 'Go'|trans }}" />{% endif %}#}
                {% endif %}
            </div>
        </div>
    {% endblock grid_column_filter_type_select %}
        {# -------------------------------------------- grid_column_filter_type_massaction --------------------------------------- #}
    {% block grid_column_filter_type_massaction %}
        <input type="button" class="grid-search-reset" value="R" title="{{ 'Reset'|trans }}" onclick="return {{ grid.hash }}_reset();"/>
    {% endblock grid_column_filter_type_massaction %}
        {# -------------------------------------------- grid_column_filter_type_massaction_filter : elements in Actions column, header line --------------------------------------- #}
    {% block grid_column_filter_type_actions %}
        <button id="search-customers-button" type="button" class="btn btn-default text-center" onClick="return {{ grid.hash }}_submitForm(event, this.form, true);">
            <span class="glyphicon glyphicon-search"></span> {{ 'search'|trans|capitalize }}
        </button>
        <a class="grid-reset btn btn-success" href="{{ grid_url('reset', grid) }}"><span class="glyphicon glyphicon-refresh"></span> {{ 'reset'|trans|capitalize }}</a>
    {% endblock grid_column_filter_type_actions %}

        {# --------------------------------------------------- grid_scripts -------------------------------------------------- #}
    {% block grid_scripts %}
        <script type="text/javascript">
            //

            {{ grid_scripts_goto(grid) }}
            {{ grid_scripts_reset(grid) }}
            {{ grid_scripts_previous_page(grid) }}
            {{ grid_scripts_next_page(grid) }}
            {{ grid_scripts_enter_page(grid) }}
            {{ grid_scripts_results_per_page(grid) }}
            {{ grid_scripts_mark_visible(grid) }}
            {{ grid_scripts_mark_all(grid) }}
            {{ grid_scripts_switch_operator(grid) }}
            {{ grid_scripts_submit_form(grid) }}
            {{ grid_scripts_ajax(grid) }}
            $(function () {
                //Activate select on grid headers for both individual page and general page
                $('#tab-logs').find('div:not(.select2-container-disabled)').find('select').select2();
                $('#tab-logs').find('select:disabled').prev('div').hide();
                $('#all-customers').find('tr.grid-row-filters').find('select:enabled').select2({
                    width: "100%"
                });

                $('.exports').find('select:enabled').select2({
                    width: "100%"
                });

                $('#all-customers').find('select:disabled').prev('div').hide();
            });
        </script>
    {% endblock grid_scripts %}

    {% block grid_scripts_goto %}

        function {{ grid.hash }}_goto(url)
        console.log('Grid Go To...');
        window.location.href = url;

        return false;
        }
    {% endblock grid_scripts_goto %}

    {% block grid_scripts_reset %}
        function {{ grid.hash }}_reset()
        {
        {{ grid.hash }}_goto('{{ grid_url('reset', grid) }}');
        $("#"+ {{ grid.hash }}).find("select").select2(
        {width: "100%"}
        );

        return false;
        }
    {% endblock grid_scripts_reset %}

    {% block grid_scripts_previous_page %}
        function {{ grid.hash }}_previousPage()
        {
        {{ grid.hash }}_goto('{{ grid_url('page', grid, grid.page - 1) }}');

        return false;
        }
    {% endblock grid_scripts_previous_page %}

    {% block grid_scripts_next_page %}
        function {{ grid.hash }}_nextPage()
        {
        {{ grid.hash }}_goto('{{ grid_url('page', grid, grid.page + 1) }}');

        return false;
        }
    {% endblock grid_scripts_next_page %}

    {% block grid_scripts_enter_page %}
        function {{ grid.hash }}_enterPage(event, page)
        {
        key = event.which;
        console.log(key);

        if (window.event) {
        key = window.event.keyCode; //IE
        }

        if (key == 13) {
        {{ grid.hash }}_goto('{{ grid_url('page', grid) }}' + page);

        return false;
        }
        }
        function {{ grid.hash }}_clickPage(event, page)
        {
        event.stopPropagation();
        {{ grid.hash }}_goto('{{ grid_url('page', grid) }}' + page);

        return false;
        }

    {% endblock grid_scripts_enter_page %}

    {% block grid_scripts_results_per_page %}
        function {{ grid.hash }}_resultsPerPage(limit)
        {
        {{ grid.hash }}_goto('{{ grid_url('limit', grid) }}' + limit);

        return true;
        }
    {% endblock grid_scripts_results_per_page %}

    {% block grid_scripts_mark_visible %}
        function {{ grid.hash }}_markVisible(select)
        {
        var form = document.getElementById('{{ grid.hash }}');

        var counter = 0;

        for (var i=0; i < form.elements.length; i++ ) {
        if (form.elements[i].type == 'checkbox') {
        form.elements[i].checked = select;

        if (form.elements[i].checked){
        counter++;
        }
        }
        }

        {% if grid.isFilterSectionVisible %}
            counter--;
        {% endif %}

        var selected = document.getElementById('{{ grid.hash }}_mass_action_selected');
        selected.innerHTML = counter > 0 ? '{{ 'Selected _s_ rows'|trans }}'.replace('_s_', counter) : '';

        document.getElementById('{{ grid.hash }}_mass_action_all').value = '0';

        return false;
        }
    {% endblock grid_scripts_mark_visible %}

    {% block grid_scripts_mark_all %}
        function {{ grid.hash }}_markAll(select)
        {
        var form = document.getElementById('{{ grid.hash }}');

        for (var i=0; i < form.elements.length; i++ ) {
        if (form.elements[i].type == 'checkbox') {
        form.elements[i].checked = select;
        }
        }

        var selected = document.getElementById('{{ grid.hash }}_mass_action_selected');

        if (select) {
        document.getElementById('{{ grid.hash }}_mass_action_all').value = '1';
        selected.innerHTML = '{{ 'Selected _s_ rows'|trans }}'.replace('_s_', '{{ grid.totalCount }}');
        } else {
        document.getElementById('{{ grid.hash }}_mass_action_all').value = '0';
        selected.innerHTML = '';
        }

        return false;
        }
    {% endblock grid_scripts_mark_all %}

    {% block grid_scripts_switch_operator %}
        {% set btwOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTW') %}
        {% set btweOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTWE') %}
        {% set isNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNULL') %}
        {% set isNotNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNOTNULL') %}
        function {{ grid.hash }}_switchOperator(elt, query_, submitOnChange)
        {
        submitOnChange = (typeof submitOnChange == 'undefined') ? true : submitOnChange;
        query_ = jq(query_);
        var inputFrom = $('#'+query_+'from');
        var inputTo = $('#'+query_+'to');
        if ((elt.options[elt.selectedIndex].value == '{{ btwOperator }}') || (elt.options[elt.selectedIndex].value == '{{ btweOperator }}')) {
        if(inputFrom.prop('nodeName') == 'SELECT'){
        inputTo.show(); //inputTo.style.display = '';
        inputTo.prop('disabled', false); //inputTo.disabled=false;
        inputTo.select2();
        }
        else  {
        inputFrom.show(); //inputFrom.style.display = '';
        inputFrom.prop('disabled', false); //inputFrom.disabled=false;
        inputTo.show(); //inputTo.style.display = '';
        inputTo.prop('disabled', false); //inputTo.disabled=false;
        console.log(inputTo);
        console.log(query_);
        }
        }
        else if ((elt.options[elt.selectedIndex].value == '{{ isNullOperator }}') || (elt.options[elt.selectedIndex].value == '{{ isNotNullOperator }}')) {
        inputFrom.hide(); //inputFrom.style.display = 'none';
        inputFrom.prop('disabled', true); //inputFrom.disabled=true;
        inputTo.hide(); //inputTo.style.display = 'none';
        inputTo.prop('disabled', true); //inputTo.disabled=true;
        if (submitOnChange) {
        elt.form.submit();
        }
        }
        else {
        inputFrom.prop('disabled', false); inputFrom.disabled=false;
        if(inputTo.prop('nodeName') == 'SELECT'){
        inputTo.prev().hide();
        }
        else{
        inputFrom.show(); //inputFrom.style.display = '';
        }
        inputTo.hide(); //inputTo.style.display = 'none';
        inputTo.prop('disabled', true); //inputTo.disabled=true;
        }
        }

        //Replacing special character in selector (id / name).
        function jq( partID ) {

        return partID.replace( /(:|\.|\[|\]|,)/g, "\\$1" );

        }


    {% endblock grid_scripts_switch_operator %}

    {% block grid_scripts_submit_form %}
        {#$(document).on('click, '#search-logs-button', function(event){#}
        {#event.stopPropagation();#}
        {#event.preventDefault();#}

        {#console.log('Hey');#}
        {#// form.submit();#}

        {#});#}
        function {{ grid.hash }}_submitForm(event, form, buttonClick = false)
        {
        event.stopPropagation();
        event.preventDefault();
        key = event.which;
        console.log('Grid_submittt');

        if (window.event) {
        key = window.event.keyCode; //IE
        }

        if (event.type != 'keypress' || key == 13 || buttonClick == true) {
        form.submit();
        }

        return true;
        }
    {% endblock grid_scripts_submit_form %}

    {% block grid_scripts_ajax %}
        $(function () {
        // Order and pagerfanta links
        $('.pagination li.disabled a', '#{{ grid.hash }}').click(function (e) {
        return false;
        });

        // Order and pagerfanta links
        $('a.order, nav a, a.searchOnClick, .pagination li:not(.disabled) a', '#{{ grid.hash }}').click(function () {
        console.log("Order");
        {{ grid.hash }}_goto(this.href);

        return false;
        });

        // Reset link
        $('#{{ grid.hash }} a.grid-reset').click(function () {
        {{ grid.hash }}_reset();

        return false;
        });

        // Mass actions submit
        $('#{{ grid.hash }} input.submit-massaction').click(function () {
        console.log('Grsi Massaction');
        var selector = $('#{{ grid.hash }} .grid_massactions select');

        {{ grid.hash }}_goto('{{ grid.routeUrl }}', selector.attr('name') + '=' + selector.val(), 'POST');

        return false;
        });

        // Grid_search submit (load only one time)
        $('#{{ grid.hash }}_search').one('submit', function (event) {
        console.log('Grid_search');
        {{ grid.hash }}_submitForm(event, this);

        return false;
        });
        });

    {% endblock grid_scripts_ajax %}