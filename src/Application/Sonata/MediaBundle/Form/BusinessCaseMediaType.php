<?php
/**
 * Created by PhpStorm.
 * User: Delphine
 * Date: 15/02/2019
 * Time: 19:54
 */

namespace Application\Sonata\MediaBundle\Form;

use Application\Sonata\MediaBundle\Form\DataTransformer\ProviderMultiDataTransformer;
use Sonata\MediaBundle\Form\Type\MediaType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\Form\FormEvent;
use Symfony\Component\Form\FormEvents;

class BusinessCaseMediaType extends MediaType
{
    /**
     * @param FormBuilderInterface $builder
     * @param array $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
//        parent::buildForm($builder, $options);
        $builder->addModelTransformer(new ProviderMultiDataTransformer($this->pool, $this->class, array(
            'provider' => $options['provider'],
            'context' => $options['context'],
            'empty_on_new' => $options['empty_on_new'],
            'new_on_update' => $options['new_on_update']
        )));

        $builder->addEventListener(FormEvents::SUBMIT, function (FormEvent $event) {
            if ($event->getForm()->has('unlink') && $event->getForm()->get('unlink')->getData()) {
                $event->setData(null);
            }
            dump("BusinessCaseMediaType submitEvent");
           // die;
        });

        $this->pool->getProvider($options['provider'])->buildMediaType($builder);

        //Removing "file" as label for field binary content generated by "buildMediaType() in Sonata\MediaBundle\Provider\FileProvider class line 149
        $builder->addEventListener(FormEvents::PRE_SET_DATA, function (FormEvent $event) {
            $form = $event->getForm();

            // Get configuration & options of specific field
            $config = $form->get('binaryContent')->getConfig();
            $options = $config->getOptions();

            $form->add(
            // Replace original field...
                'binaryContent',
                get_class($config->getType()->getInnerType()),
                // while keeping the original options...
                array_replace(
                    $options,
                    [
                        // replacing specific ones
                        'label' => false,
                        "multiple" => true,
                        "attr" => ["class" => "multiple-media"]
                    ]
                )
            );
        });
//
//        // NEXT_MAJOR: Remove ternary and keep 'Symfony\Component\Form\Extension\Core\Type\CheckboxType' value.
////        // (when requirement of Symfony is >= 2.8)
//        $builder->add(
//            'unlink',
//            method_exists('Symfony\Component\Form\AbstractType', 'getBlockPrefix')
//                ? 'Symfony\Component\Form\Extension\Core\Type\CheckboxType'
//                : 'checkbox',
//            array(
//                'label' => 'Remove',
//                'mapped' => false,
//                'data' => false,
//                'required' => false,
//                'attr' => ['class' => 'orange-icheck']
//            )
//        );

    }

    /**
     * @return string
     */
    public function getName()
    {
        return 'business_case_media_type';
    }
}
